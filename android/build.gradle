// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')
        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.0'

        ndkVersion = "25.1.8937393"
    }
    repositories {
        // 阿里云镜像源 - 优先使用
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        
        // 原始源作为备选
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.3'
        classpath('com.android.tools.build:gradle')
        classpath('com.facebook.react:react-native-gradle-plugin')
    }
}

apply plugin: "com.facebook.react.rootproject"

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android'))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(['node', '--print', "require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), '../dist'))
        }

        // 阿里云镜像源 - 优先使用
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        
        // 原始源作为备选
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects { subproj ->
  configurations.all { cfg ->
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
      def req = details.requested
      if (req.group == 'org.jetbrains.kotlinx' && req.name.startsWith('kotlinx-coroutines')) {
        details.useVersion '1.7.3'
        details.because('Expo 50 使用 Kotlin 1.8.x；kotlinx-coroutines 1.9.0 起按 Kotlin 2.0 编译')
      }
    }
    // 可选：再保险
    // resolutionStrategy.force(
    //   'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3',
    //   'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    // )
  }
}